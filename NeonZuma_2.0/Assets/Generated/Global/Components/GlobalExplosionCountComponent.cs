//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalContext {

    public GlobalEntity explosionCountEntity { get { return GetGroup(GlobalMatcher.ExplosionCount).GetSingleEntity(); } }
    public ExplosionCountComponent explosionCount { get { return explosionCountEntity.explosionCount; } }
    public bool hasExplosionCount { get { return explosionCountEntity != null; } }

    public GlobalEntity SetExplosionCount(int newValue) {
        if (hasExplosionCount) {
            throw new Entitas.EntitasException("Could not set ExplosionCount!\n" + this + " already has an entity with ExplosionCountComponent!",
                "You should check if the context already has a explosionCountEntity before setting it or use context.ReplaceExplosionCount().");
        }
        var entity = CreateEntity();
        entity.AddExplosionCount(newValue);
        return entity;
    }

    public void ReplaceExplosionCount(int newValue) {
        var entity = explosionCountEntity;
        if (entity == null) {
            entity = SetExplosionCount(newValue);
        } else {
            entity.ReplaceExplosionCount(newValue);
        }
    }

    public void RemoveExplosionCount() {
        explosionCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalEntity {

    public ExplosionCountComponent explosionCount { get { return (ExplosionCountComponent)GetComponent(GlobalComponentsLookup.ExplosionCount); } }
    public bool hasExplosionCount { get { return HasComponent(GlobalComponentsLookup.ExplosionCount); } }

    public void AddExplosionCount(int newValue) {
        var index = GlobalComponentsLookup.ExplosionCount;
        var component = (ExplosionCountComponent)CreateComponent(index, typeof(ExplosionCountComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceExplosionCount(int newValue) {
        var index = GlobalComponentsLookup.ExplosionCount;
        var component = (ExplosionCountComponent)CreateComponent(index, typeof(ExplosionCountComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveExplosionCount() {
        RemoveComponent(GlobalComponentsLookup.ExplosionCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GlobalMatcher {

    static Entitas.IMatcher<GlobalEntity> _matcherExplosionCount;

    public static Entitas.IMatcher<GlobalEntity> ExplosionCount {
        get {
            if (_matcherExplosionCount == null) {
                var matcher = (Entitas.Matcher<GlobalEntity>)Entitas.Matcher<GlobalEntity>.AllOf(GlobalComponentsLookup.ExplosionCount);
                matcher.componentNames = GlobalComponentsLookup.componentNames;
                _matcherExplosionCount = matcher;
            }

            return _matcherExplosionCount;
        }
    }
}
