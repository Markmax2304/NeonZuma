//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalContext {

    public GlobalEntity forceSpeedEntity { get { return GetGroup(GlobalMatcher.ForceSpeed).GetSingleEntity(); } }
    public ForceSpeedComponent forceSpeed { get { return forceSpeedEntity.forceSpeed; } }
    public bool hasForceSpeed { get { return forceSpeedEntity != null; } }

    public GlobalEntity SetForceSpeed(float newValue) {
        if (hasForceSpeed) {
            throw new Entitas.EntitasException("Could not set ForceSpeed!\n" + this + " already has an entity with ForceSpeedComponent!",
                "You should check if the context already has a forceSpeedEntity before setting it or use context.ReplaceForceSpeed().");
        }
        var entity = CreateEntity();
        entity.AddForceSpeed(newValue);
        return entity;
    }

    public void ReplaceForceSpeed(float newValue) {
        var entity = forceSpeedEntity;
        if (entity == null) {
            entity = SetForceSpeed(newValue);
        } else {
            entity.ReplaceForceSpeed(newValue);
        }
    }

    public void RemoveForceSpeed() {
        forceSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalEntity {

    public ForceSpeedComponent forceSpeed { get { return (ForceSpeedComponent)GetComponent(GlobalComponentsLookup.ForceSpeed); } }
    public bool hasForceSpeed { get { return HasComponent(GlobalComponentsLookup.ForceSpeed); } }

    public void AddForceSpeed(float newValue) {
        var index = GlobalComponentsLookup.ForceSpeed;
        var component = (ForceSpeedComponent)CreateComponent(index, typeof(ForceSpeedComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceForceSpeed(float newValue) {
        var index = GlobalComponentsLookup.ForceSpeed;
        var component = (ForceSpeedComponent)CreateComponent(index, typeof(ForceSpeedComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveForceSpeed() {
        RemoveComponent(GlobalComponentsLookup.ForceSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GlobalMatcher {

    static Entitas.IMatcher<GlobalEntity> _matcherForceSpeed;

    public static Entitas.IMatcher<GlobalEntity> ForceSpeed {
        get {
            if (_matcherForceSpeed == null) {
                var matcher = (Entitas.Matcher<GlobalEntity>)Entitas.Matcher<GlobalEntity>.AllOf(GlobalComponentsLookup.ForceSpeed);
                matcher.componentNames = GlobalComponentsLookup.componentNames;
                _matcherForceSpeed = matcher;
            }

            return _matcherForceSpeed;
        }
    }
}
