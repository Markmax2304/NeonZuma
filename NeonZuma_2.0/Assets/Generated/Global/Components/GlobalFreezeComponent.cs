//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalContext {

    public GlobalEntity freezeEntity { get { return GetGroup(GlobalMatcher.Freeze).GetSingleEntity(); } }

    public bool isFreeze {
        get { return freezeEntity != null; }
        set {
            var entity = freezeEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isFreeze = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalEntity {

    static readonly FreezeComponent freezeComponent = new FreezeComponent();

    public bool isFreeze {
        get { return HasComponent(GlobalComponentsLookup.Freeze); }
        set {
            if (value != isFreeze) {
                var index = GlobalComponentsLookup.Freeze;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : freezeComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GlobalMatcher {

    static Entitas.IMatcher<GlobalEntity> _matcherFreeze;

    public static Entitas.IMatcher<GlobalEntity> Freeze {
        get {
            if (_matcherFreeze == null) {
                var matcher = (Entitas.Matcher<GlobalEntity>)Entitas.Matcher<GlobalEntity>.AllOf(GlobalComponentsLookup.Freeze);
                matcher.componentNames = GlobalComponentsLookup.componentNames;
                _matcherFreeze = matcher;
            }

            return _matcherFreeze;
        }
    }
}
