//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity trackStorageEntity { get { return GetGroup(GameMatcher.TrackStorage).GetSingleEntity(); } }
    public TrackStorageComponent trackStorage { get { return trackStorageEntity.trackStorage; } }
    public bool hasTrackStorage { get { return trackStorageEntity != null; } }

    public GameEntity SetTrackStorage(TrackStorage newValue) {
        if (hasTrackStorage) {
            throw new Entitas.EntitasException("Could not set TrackStorage!\n" + this + " already has an entity with TrackStorageComponent!",
                "You should check if the context already has a trackStorageEntity before setting it or use context.ReplaceTrackStorage().");
        }
        var entity = CreateEntity();
        entity.AddTrackStorage(newValue);
        return entity;
    }

    public void ReplaceTrackStorage(TrackStorage newValue) {
        var entity = trackStorageEntity;
        if (entity == null) {
            entity = SetTrackStorage(newValue);
        } else {
            entity.ReplaceTrackStorage(newValue);
        }
    }

    public void RemoveTrackStorage() {
        trackStorageEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TrackStorageComponent trackStorage { get { return (TrackStorageComponent)GetComponent(GameComponentsLookup.TrackStorage); } }
    public bool hasTrackStorage { get { return HasComponent(GameComponentsLookup.TrackStorage); } }

    public void AddTrackStorage(TrackStorage newValue) {
        var index = GameComponentsLookup.TrackStorage;
        var component = (TrackStorageComponent)CreateComponent(index, typeof(TrackStorageComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTrackStorage(TrackStorage newValue) {
        var index = GameComponentsLookup.TrackStorage;
        var component = (TrackStorageComponent)CreateComponent(index, typeof(TrackStorageComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTrackStorage() {
        RemoveComponent(GameComponentsLookup.TrackStorage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTrackStorage;

    public static Entitas.IMatcher<GameEntity> TrackStorage {
        get {
            if (_matcherTrackStorage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TrackStorage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTrackStorage = matcher;
            }

            return _matcherTrackStorage;
        }
    }
}
