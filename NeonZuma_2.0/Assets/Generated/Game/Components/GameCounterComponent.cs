//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CounterComponent counter { get { return (CounterComponent)GetComponent(GameComponentsLookup.Counter); } }
    public bool hasCounter { get { return HasComponent(GameComponentsLookup.Counter); } }

    public void AddCounter(float newValue, System.Action newPostAction) {
        var index = GameComponentsLookup.Counter;
        var component = (CounterComponent)CreateComponent(index, typeof(CounterComponent));
        component.value = newValue;
        component.postAction = newPostAction;
        AddComponent(index, component);
    }

    public void ReplaceCounter(float newValue, System.Action newPostAction) {
        var index = GameComponentsLookup.Counter;
        var component = (CounterComponent)CreateComponent(index, typeof(CounterComponent));
        component.value = newValue;
        component.postAction = newPostAction;
        ReplaceComponent(index, component);
    }

    public void RemoveCounter() {
        RemoveComponent(GameComponentsLookup.Counter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCounter;

    public static Entitas.IMatcher<GameEntity> Counter {
        get {
            if (_matcherCounter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Counter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCounter = matcher;
            }

            return _matcherCounter;
        }
    }
}
