//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity rechargeDistanceEntity { get { return GetGroup(GameMatcher.RechargeDistance).GetSingleEntity(); } }
    public RechargeDistanceComponent rechargeDistance { get { return rechargeDistanceEntity.rechargeDistance; } }
    public bool hasRechargeDistance { get { return rechargeDistanceEntity != null; } }

    public GameEntity SetRechargeDistance(UnityEngine.Vector3 newValue) {
        if (hasRechargeDistance) {
            throw new Entitas.EntitasException("Could not set RechargeDistance!\n" + this + " already has an entity with RechargeDistanceComponent!",
                "You should check if the context already has a rechargeDistanceEntity before setting it or use context.ReplaceRechargeDistance().");
        }
        var entity = CreateEntity();
        entity.AddRechargeDistance(newValue);
        return entity;
    }

    public void ReplaceRechargeDistance(UnityEngine.Vector3 newValue) {
        var entity = rechargeDistanceEntity;
        if (entity == null) {
            entity = SetRechargeDistance(newValue);
        } else {
            entity.ReplaceRechargeDistance(newValue);
        }
    }

    public void RemoveRechargeDistance() {
        rechargeDistanceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RechargeDistanceComponent rechargeDistance { get { return (RechargeDistanceComponent)GetComponent(GameComponentsLookup.RechargeDistance); } }
    public bool hasRechargeDistance { get { return HasComponent(GameComponentsLookup.RechargeDistance); } }

    public void AddRechargeDistance(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.RechargeDistance;
        var component = (RechargeDistanceComponent)CreateComponent(index, typeof(RechargeDistanceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRechargeDistance(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.RechargeDistance;
        var component = (RechargeDistanceComponent)CreateComponent(index, typeof(RechargeDistanceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRechargeDistance() {
        RemoveComponent(GameComponentsLookup.RechargeDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRechargeDistance;

    public static Entitas.IMatcher<GameEntity> RechargeDistance {
        get {
            if (_matcherRechargeDistance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RechargeDistance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRechargeDistance = matcher;
            }

            return _matcherRechargeDistance;
        }
    }
}
