//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpriteGlowEffectComponent spriteGlowEffect { get { return (SpriteGlowEffectComponent)GetComponent(GameComponentsLookup.SpriteGlowEffect); } }
    public bool hasSpriteGlowEffect { get { return HasComponent(GameComponentsLookup.SpriteGlowEffect); } }

    public void AddSpriteGlowEffect(SpriteGlow.SpriteGlowEffect newValue) {
        var index = GameComponentsLookup.SpriteGlowEffect;
        var component = (SpriteGlowEffectComponent)CreateComponent(index, typeof(SpriteGlowEffectComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpriteGlowEffect(SpriteGlow.SpriteGlowEffect newValue) {
        var index = GameComponentsLookup.SpriteGlowEffect;
        var component = (SpriteGlowEffectComponent)CreateComponent(index, typeof(SpriteGlowEffectComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpriteGlowEffect() {
        RemoveComponent(GameComponentsLookup.SpriteGlowEffect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpriteGlowEffect;

    public static Entitas.IMatcher<GameEntity> SpriteGlowEffect {
        get {
            if (_matcherSpriteGlowEffect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpriteGlowEffect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpriteGlowEffect = matcher;
            }

            return _matcherSpriteGlowEffect;
        }
    }
}
