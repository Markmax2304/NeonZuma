//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public TouchTypeComponent touchType { get { return (TouchTypeComponent)GetComponent(InputComponentsLookup.TouchType); } }
    public bool hasTouchType { get { return HasComponent(InputComponentsLookup.TouchType); } }

    public void AddTouchType(TypeTouch newValue) {
        var index = InputComponentsLookup.TouchType;
        var component = (TouchTypeComponent)CreateComponent(index, typeof(TouchTypeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTouchType(TypeTouch newValue) {
        var index = InputComponentsLookup.TouchType;
        var component = (TouchTypeComponent)CreateComponent(index, typeof(TouchTypeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTouchType() {
        RemoveComponent(InputComponentsLookup.TouchType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherTouchType;

    public static Entitas.IMatcher<InputEntity> TouchType {
        get {
            if (_matcherTouchType == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.TouchType);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherTouchType = matcher;
            }

            return _matcherTouchType;
        }
    }
}
